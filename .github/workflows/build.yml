name: Build

on:
  push:
  pull_request:

permissions:
  contents: write
  packages: write

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Retrieve cache
        id: retrieve-cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/exd-data
          key: exd-data

      - name: Download EXD files
        uses: WorkingRobot/ffxiv-downloader@v3
        id: downloader
        with:
          output-path: exd-data
          regex: '^sqpack\/ffxiv\/0a0000\..+$'

      - name: Restore
        run: |
          dotnet restore src/Lumina.Excel.sln

      - name: Build
        run: |
          dotnet build -c Release --no-restore --property:GamePath=${{ github.workspace }}/exd-data/sqpack /p:ContinuousIntegrationBuild=true src/Lumina.Excel.sln

      - name: Pack
        run: |
          dotnet pack -c Release --no-build src/Lumina.Excel.sln

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Lumina.Excel
          path: src/Lumina.Excel/bin/Release
          if-no-files-found: error

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            src/Lumina.Excel/bin/Release/*.nupkg
            src/Lumina.Excel/bin/Release/*.snupkg

      - name: Upload to GPR
        if: startsWith(github.ref, 'refs/tags/')
        run: dotnet nuget push src/Lumina.Excel/bin/Release/*.nupkg -s https://nuget.pkg.github.com/${{ github.repository_owner }} -k ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to NuGet
        if: startsWith(github.ref, 'refs/tags/')
        run: dotnet nuget push src/Lumina.Excel/bin/Release/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
